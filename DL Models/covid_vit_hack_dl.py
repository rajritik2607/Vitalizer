# -*- coding: utf-8 -*-
"""covid_vit_hack_dl.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19A_dzcq2kkMglwEfS1by6dAwTF5624og
"""

import numpy as np
import pandas as pd
from google.colab import files
import io
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import metrics
import tensorflow as tf
from keras.models import Sequential
from keras.layers import Dense
import coremltools

uploaded = files.upload()

df=pd.read_csv(io.StringIO(uploaded['covid.csv'].decode('utf-8')),low_memory=False)

df.dropna(inplace=True)

df.replace(2.0, 0.0, inplace=True)
df.replace(3.0, 2.0, inplace=True)
df = df.loc[(df.covid_res == 1) | (df.covid_res == 0)]
df = df.loc[(df.pneumonia == 1) | (df.pneumonia == 0)]
df = df.loc[(df.diabetes == 1) | (df.diabetes == 0)]
df = df.loc[(df.copd == 1) | (df.copd == 0)]
df = df.loc[(df.asthma == 1) | (df.asthma == 0)]
df = df.loc[(df.inmsupr == 1) | (df.inmsupr == 0)]
df = df.loc[(df.hypertension == 1) | (df.hypertension == 0)]
df = df.loc[(df.other_disease == 1) | (df.other_disease == 0)]
df = df.loc[(df.cardiovascular == 1) | (df.cardiovascular == 0)]
df = df.loc[(df.obesity == 1) | (df.obesity == 0)]
df = df.loc[(df.renal_chronic == 1) | (df.renal_chronic == 0)]
df = df.loc[(df.tobacco == 1) | (df.tobacco == 0)]

X = df.drop("covid_res", axis = 1)
y = df["covid_res"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=101)

scaler = StandardScaler().fit(X_train)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

model = Sequential()
model.add(Dense(12, activation='relu', input_shape=(14,)))
model.add(Dense(8, activation='relu'))
model.add(Dense(3, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy',
              optimizer='adam',
              metrics=['acc', 'val_loss'])
                   
model.fit(X_train, y_train,epochs=20, batch_size=32, verbose=1)

model.save("covid_vit_hack.h5")

model.save_weights("covid_vit_hack_wieghts.h5")

class_labels = ["covid_res"]
final_covid_model = coremltools.converters.tensorflow.convert("covid_vit_hack.h5", input_name = ["sex", "patient_type", "pneumonia", "age", "diabetes", "copd", "asthma", "inmsupr", "hypertension", "other_disease", "cardiovascular", "obesity", "renal_chronic", "tobacco"], class_labels = class_labels, output_names = ["covid_res"])
final_covid_model.short_description = "Outputs Chances of Covid-19"
final_covid_model.save("final_covid_model2.mlmodel")

